package layout

import (
	"my-go-template/internal/middleware"
	"my-go-template/internal/user"
	"net/http"
)

func getTheme(r *http.Request) string {
	config := middleware.GetConfigFromContext(r)
	if config.Theme.EnableThemeSwitcher {
		cookie, err := r.Cookie("theme")
		if err == nil && cookie.Value != "" {
			return cookie.Value
		}
	}
	return config.Theme.StandardTheme
}

templ Base(r *http.Request) {
	<!DOCTYPE html>
	<html lang="en" data-theme={ getTheme(r) }>
		<head>
			<meta charset="utf-8"/>
			<title>Go Blueprint Hello</title>
			<link rel="icon" type="image/x-icon" href="/assets/img/favicon.png"/>
			<link href="/assets/css/output.css" rel="stylesheet"/>
			<script src="/assets/js/htmx.min.js"></script>
		</head>
		<body>
			<div class="flex h-screen flex-col">
				<header class="flex">
					@Header(user.GetUserFromContext(r), middleware.GetConfigFromContext(r))
				</header>
				if middleware.GetConfigFromContext(r).Theme.EnableSidebar {
					@Sidebar() {
						<main class="justify-center w-full flex flex-1 mt-5 mb-5">
							{ children... }
						</main>
					}
				} else {
					<main class="justify-center w-full flex flex-1 mt-5 mb-5">
						{ children... }
					</main>
				}
				<footer class="flex">
					@Footer(middleware.GetConfigFromContext(r))
				</footer>
			</div>
			<!-- We use this to remove erros from erros divs -->
			<script>
			document.body.addEventListener('clearErrors', function() {
				document.getElementById('errors').innerHTML = '';
				});
			</script>
		</body>
	</html>
}
