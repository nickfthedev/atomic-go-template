package common

import "fmt"

type ActionButton struct {
	Label string
	Url   string
}

type AlertData struct {
	AlertType    string
	Message      string
	Messages     []string
	RedirectUrl  string
	RedirectTime int
	ActionButton *ActionButton
}

templ Alert(data AlertData) {
	<div>
		<div role="alert" class={ fmt.Sprintf("w-full alert alert-%s", data.AlertType) }>
			<div class="flex flex-row gap-2">
				if data.AlertType == "success" {
					<svg
						xmlns="http://www.w3.org/2000/svg"
						class="h-6 w-6 shrink-0 stroke-current"
						fill="none"
						viewBox="0 0 24 24"
					>
						<path
							stroke-linecap="round"
							stroke-linejoin="round"
							stroke-width="2"
							d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"
						></path>
					</svg>
				} else if data.AlertType == "error" {
					<svg
						xmlns="http://www.w3.org/2000/svg"
						class="h-6 w-6 shrink-0 stroke-current"
						fill="none"
						viewBox="0 0 24 24"
					>
						<path
							stroke-linecap="round"
							stroke-linejoin="round"
							stroke-width="2"
							d="M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z"
						></path>
					</svg>
				} else if data.AlertType == "warning" {
					<svg
						xmlns="http://www.w3.org/2000/svg"
						class="h-6 w-6 shrink-0 stroke-current"
						fill="none"
						viewBox="0 0 24 24"
					>
						<path
							stroke-linecap="round"
							stroke-linejoin="round"
							stroke-width="2"
							d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"
						></path>
					</svg>
				} else if data.AlertType == "info" {
					<svg
						xmlns="http://www.w3.org/2000/svg"
						fill="none"
						viewBox="0 0 24 24"
						class="h-6 w-6 shrink-0 stroke-current"
					>
						<path
							stroke-linecap="round"
							stroke-linejoin="round"
							stroke-width="2"
							d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
						></path>
					</svg>
				}
				<div class="flex flex-col gap-2">
					if len(data.Messages) > 0 {
						<ul>
							for _, message := range data.Messages {
								<li>{ message }</li>
							}
						</ul>
					}
					if data.Message != "" {
						<span>{ data.Message }</span>
					}
				</div>
			</div>
			<div class="flex flex-col gap-2 w-full">
				if data.ActionButton != nil {
					<div class="flex flex-row justify-end">
						<a href={ templ.SafeURL(data.ActionButton.Url) } class="btn btn-sm">{ data.ActionButton.Label }</a>
					</div>
				}
			</div>
		</div>
		if data.RedirectUrl != "" {
			<meta http-equiv="refresh" content={ fmt.Sprintf("%d; url=%s", data.RedirectTime, data.RedirectUrl) }/>
		}
	</div>
}
